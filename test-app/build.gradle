buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
    }
}

version "0.1"
group "test.app"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "asset-pipeline"
apply plugin: "org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "http://oss.jfrog.org/oss-snapshot-local" }
}

dependencies {
    compile project(":spring-security-oauth2-provider")

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.4.0.Final"
    compile "org.hibernate:hibernate-ehcache:5.4.0.Final"       //Hibernate 5
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
    testCompile "org.grails:grails-testing-support:1.1.5"
    testCompile "org.grails:grails-gorm-testing-support:1.1.5"
    testCompile "org.grails:grails-web-testing-support:1.1.5"
    testCompile "org.grails:grails-datastore-gorm-test"
    testCompile 'org.spockframework:spock-core:1.2-groovy-2.5'
    testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1', {
        ["commons-logging", "xml-apis", "groovy"].each { exclude module: it }
    }
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:2.53.0"

    // TODO switch back to com.github.detro:phantomjsdriver when this issue is resolved:
    // https://github.com/detro/ghostdriver/issues/397
    testCompile 'com.codeborne:phantomjsdriver:1.3.0'

}

integrationTest {
    systemProperties = ["http.basic": System.getProperty("http.basic")]
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    sourceResources sourceSets.main
}

assets {
    minifyJs = true
    minifyCss = true
}
